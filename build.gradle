// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        // Versions for all the dependencies we plan to use. It's particularly useful for kotlin and
        // navigation where the versions of the plugin needs to be the same as the version of the
        // library defined in the app Gradle file
        androidXTestCoreVersion = '1.2.0'
        androidXTestExtKotlinRunnerVersion = '1.1.1'

        nav_version = "2.3.0-alpha04"
        version_android_gradle_plugin = "3.3.2"
        version_core = "1.0.1"
        version_constraint_layout = "1.1.3"
        version_glide = "4.8.0"
        version_kotlin = "1.3.50"
        version_kotlin_coroutines = "1.1.0"
        version_lifecycle_extensions = "2.0.0"
        version_moshi = "1.8.0"
        version_navigation = "1.0.0"
        version_retrofit = "2.6.0"
        version_retrofit_coroutines_adapter = "0.9.2"
        version_recyclerview = "1.0.0"
        version_room = "2.0.0"
        version_work = "1.0.0-alpha11"
        version_timber = "4.7.1"

        androidxTextExtKotlinRunnerVersion = "1.1.0"
        archTestingVersion = '2.0.0'
        espressoVersion = "3.1.1"
        hamcrestVersion = '1.3'
        junitVersion = "4.12"
        robolectricVersion = '4.3.1'

    }

    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:$version_navigation"
        classpath 'com.google.gms:google-services:4.3.3'
//        Crashlytics Gradle plugin.
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.1.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
