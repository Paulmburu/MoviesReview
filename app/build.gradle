apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "tk.paulmburu.moviesreview"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 2
        versionName "1.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        buildConfigField("String", "MOVIESREVIEW_API_KEY", "\"${project.hasProperty("MOVIESREVIEW_API_KEY") ? MOVIESREVIEW_API_KEY : System.getenv("MOVIESREVIEW_API_KEY")}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }
    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"


    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

//    Dependencies for Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    implementation "com.squareup.retrofit2:retrofit: $version_retrofit"
//    implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

//    dependencies for both Coroutines and for the Retrofit Coroutines Adapter
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

//    Glide library dependency
    implementation "com.github.bumptech.glide:glide:$version_glide"

//    Gradle dependency for the RecyclerView
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"

    // Room database
    implementation "androidx.room:room-runtime:$version_room"
    implementation 'com.google.android.play:core-ktx:1.6.5'
    kapt "androidx.room:room-compiler:$version_room"

    // WorkManager
    implementation "android.arch.work:work-runtime-ktx:$version_work"

    // Logging
    implementation "com.jakewharton.timber:timber:$version_timber"

    // Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics:17.2.2'

//    Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'


    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    def dagger_version = "2.27"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version" // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"

    //  This package provides testing utilities for effectively testing coroutines.
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.6'

    // Androidx Test -Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidxTextExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
}
